import angr
from angr.state_plugins.sim_action import SimAction, SimActionConstraint

class jsonq(angr.SimProcedure):
    def run(self):
        key_str=self.load_str(self,self.state.regs.r2)
        operations="<Operation {0} ({1}, {2}, {3})>".format(func_name,self.state.regs.r0,self.state.regs.r1,key_str)
        print operations
        sac = SimActionConstraint(self.state,operations)
        self.state.history.add_action(sac)
        self.state.regs.ip=self.state.regs.lr
	def load_str(self,addr):
	    memory = self.project.loader.memory
		stn = ""
		offset = 0
		current_char =memory[addr + offset]
		while current_char in string.printable:
			stn += current_char
			offset += 1
			current_char = memory[addr + offset]

			# check that the string was a null terminated string with minimum length
		if current_char == "\x00" and len(stn) >= 2
			strings.append((addr, stn))
		return stn

